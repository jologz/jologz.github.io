{"version":3,"sources":["helpers/routeHelpers.ts","components/Layout.tsx","helpers/compose.ts","helpers/stringHelpers.ts","envConfig.ts","queries/caseNumbersQuery.ts","stardog/StardogContext.tsx","stardog/useQuery.ts","pages/HeatmapPage/index.tsx","pages/HomePage/components/CaseNumbersTable.tsx","pages/HomePage/index.tsx","mainRouting.tsx","pages/NotFoundPage/index.tsx","App.tsx","configuration/baseThemeOverride.ts","pages/ForbiddenPage/index.tsx","configuration/RouterConfig.tsx","configuration/AppConfig.tsx","index.tsx"],"names":["routes","Layout","children","Container","maxWidth","composeCoupleFn","f","g","convertStringUndefinedToStringEmpty","stringToConvert","undefined","appendRouteMatchUrlToPath","matchUrl","path","map","thisPath","envConfig","process","caseNumbersQuery","StardogContext","createContext","connection","dbName","StardogProvider","username","password","endpoint","Connection","Provider","value","useQuery","useContext","useState","loading","setLoading","error","setError","data","setData","useCallback","a","readQuery","query","execute","response","ok","status","statusText","bindings","body","results","HeatMapPage","runCaseNumbersQuery","positions","setPositions","useEffect","computedPositions","currentDataProp","idx","Object","keys","filter","currentKey","includes","reduce","accumObj","weight","Number","style","height","width","bootstrapURLKeys","key","libraries","defaultCenter","lat","lng","defaultZoom","heatmap","options","opacity","radius","CaseNumbersTable","rows","columns","Typography","component","HomePage","useMemo","field","headerName","caseNumbersRows","setCaseNumbersRows","updatedObj","id","toString","Link","RouterLink","to","mainRouting","exact","childComponent","routeMatchUrl","ChildComponent","computedPath","fns","reduceRight","pipe","NotFoundPage","App","rest","baseThemeOverride","responsiveFontSizes","createMuiTheme","typography","button","textTransform","ForbiddenPage","RouterConfig","location","useLocation","state","notFound","forbidden","AppConfig","CssBaseline","ThemeProvider","theme","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ebbe7f87.chunk.js","sourcesContent":["import { FC } from 'react'\r\nimport { pipe } from './compose'\r\nimport { convertStringUndefinedToStringEmpty } from './stringHelpers'\r\n\r\nexport interface RouteType {\r\n    path: string | string[]\r\n    exact: boolean\r\n    childComponent: FC\r\n}\r\n\r\nexport const appendRouteMatchUrlToPath = (matchUrl: string) => (\r\n    path: string | string[]\r\n) =>\r\n    typeof path === 'string'\r\n        ? matchUrl + path\r\n        : (path as string[]).map((thisPath) => matchUrl + thisPath)\r\n\r\nexport interface GenerateRoutesResponseProps {\r\n    exact: boolean\r\n    computedPath: string | string[]\r\n    key: string\r\n    ChildComponent: FC\r\n}\r\n\r\nexport const generateRoutes = (routes: RouteType[]) => (\r\n    routeMatchUrl?: string\r\n): GenerateRoutesResponseProps[] =>\r\n    routes.map(({ path, exact, childComponent: ChildComponent }, idx) => {\r\n        const computedPath = pipe(\r\n            convertStringUndefinedToStringEmpty,\r\n            appendRouteMatchUrlToPath\r\n        )(routeMatchUrl)(path)\r\n\r\n        return {\r\n            ChildComponent,\r\n            computedPath,\r\n            key: idx.toString(),\r\n            exact,\r\n        }\r\n    })\r\n","import Container from '@material-ui/core/Container'\r\nimport React, { FC } from 'react'\r\n\r\nconst Layout: FC = ({ children }) => {\r\n    return (\r\n        <Container maxWidth=\"xl\">\r\n            <>{children}</>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default Layout\r\n","export const composeCoupleFn = (f: Function, g: Function) => (...args: any) =>\r\n    f(g(...args))\r\n\r\nexport const compose = (...fns: Function[]) => fns.reduce(composeCoupleFn)\r\n\r\nexport const pipe = (...fns: Function[]) => fns.reduceRight(composeCoupleFn)\r\n","export const convertStringUndefinedToStringEmpty = (stringToConvert?: string) =>\r\n    stringToConvert === undefined ? '' : stringToConvert\r\n","export const envConfig = {\r\n    googleApiKey: process.env.REACT_APP_GOOGLE_API_KEY,\r\n}\r\n","export const caseNumbersQuery = `PREFIX wd: <http://www.wikidata.org/entity/>\r\nPREFIX wdt: <http://www.wikidata.org/prop/direct/>\r\nPREFIX p: <http://www.wikidata.org/prop/>\r\nPREFIX ps: <http://www.wikidata.org/prop/statement/>\r\nPREFIX psv: <http://www.wikidata.org/prop/statement/value/>\r\nPREFIX wikibase: <http://wikiba.se/ontology#>\r\n\r\nSELECT ?countyName ?cases ?population ?percentCases ?lat ?lng\r\n{\r\n    # get the latest date\r\n    { SELECT (max(?d) as ?date) { ?r :date ?d } }\r\n\r\n    # get all the reports for the latest date\r\n    ?report\r\n        :cases ?cases  ;\r\n        :date ?date ;                \r\n        :county [\r\n            rdfs:label ?countyName ;\r\n            :fips ?fips\r\n        ]    \r\n\r\n    # Get coordinates of\r\n    SERVICE <https://query.wikidata.org/sparql> \r\n    {\r\n        SELECT * {\r\n            ?item wdt:P882 ?fips ;\r\n                  wdt:P1082 ?population ;\r\n                  p:P625 ?coordPoint .\r\n            ?coordPoint psv:P625 ?coord_node .\r\n            ?coord_node wikibase:geoLongitude ?lng ;\r\n                        wikibase:geoLatitude ?lat .\r\n        }\r\n    }   \r\n    # compute percentages\r\n    BIND(roundHalfToEven((?cases / ?population) * 100, 2) AS ?percentCases)\r\n}\r\nORDER BY desc(?percentCases)`\r\n","import { createContext, FC } from 'react'\r\nimport { Connection } from 'stardog'\r\n\r\nexport interface StardogContextProps {\r\n    connection: Connection\r\n    dbName: string\r\n}\r\n\r\nexport const StardogContext = createContext<StardogContextProps>({\r\n    connection: {} as Connection,\r\n    dbName: '',\r\n})\r\n\r\nexport interface StardogProviderProps {\r\n    username: string\r\n    password: string\r\n    endpoint: string\r\n    dbName: string\r\n}\r\n\r\nexport const StardogProvider: FC<StardogProviderProps> = ({\r\n    username,\r\n    password,\r\n    endpoint,\r\n    dbName,\r\n    children,\r\n}) => {\r\n    const connection = new Connection({\r\n        username,\r\n        password,\r\n        endpoint,\r\n    })\r\n\r\n    return (\r\n        <StardogContext.Provider\r\n            value={{\r\n                connection,\r\n                dbName,\r\n            }}\r\n        >\r\n            {children}\r\n        </StardogContext.Provider>\r\n    )\r\n}\r\n","import { useCallback, useContext, useState } from 'react'\r\nimport { query } from 'stardog'\r\nimport { StardogContext, StardogContextProps } from './StardogContext'\r\n\r\nexport interface ErrorResponse {\r\n    status: number\r\n    statusText: string\r\n}\r\n\r\nexport interface DataProps {\r\n    datatype?: string\r\n    type: string\r\n    value: string\r\n}\r\n\r\nexport type RowDataType<TKey extends string> = Record<TKey, DataProps>\r\n\r\nexport interface UseQueryResultProps<TKey extends string> {\r\n    error?: ErrorResponse\r\n    loading: boolean\r\n    data: RowDataType<TKey>[] | null\r\n}\r\n\r\nexport interface RunQueryProps {\r\n    readQuery: string\r\n}\r\n\r\nexport const useQuery = <TKey extends string>(): [\r\n    (runQueryProps: RunQueryProps) => Promise<void>,\r\n    UseQueryResultProps<TKey>\r\n] => {\r\n    const { connection, dbName } = useContext<StardogContextProps>(\r\n        StardogContext\r\n    )\r\n    const [loading, setLoading] = useState<boolean>(false)\r\n    const [error, setError] = useState<ErrorResponse>()\r\n    const [data, setData] = useState<RowDataType<TKey>[] | null>(null)\r\n\r\n    const runQuery = useCallback(\r\n        async ({ readQuery }: RunQueryProps) => {\r\n            setLoading(true)\r\n            const response = await query.execute(connection, dbName, readQuery)\r\n\r\n            if (!response.ok) {\r\n                setError({\r\n                    status: response.status,\r\n                    statusText: response.statusText,\r\n                })\r\n                setLoading(false)\r\n                return\r\n            }\r\n\r\n            const { bindings } = response.body.results\r\n            setData(bindings as RowDataType<TKey>[])\r\n            setLoading(false)\r\n        },\r\n        [connection, dbName]\r\n    )\r\n\r\n    return [\r\n        runQuery,\r\n        {\r\n            error,\r\n            loading,\r\n            data,\r\n        },\r\n    ]\r\n}\r\n","import { envConfig } from 'envConfig'\r\nimport GoogleMapReact, { Coords, Position } from 'google-map-react'\r\nimport { CaseNumbersDataKey } from 'pages/HomePage/components/CaseNumbersTable'\r\nimport { caseNumbersQuery } from 'queries/caseNumbersQuery'\r\nimport { useEffect, useState } from 'react'\r\nimport { useQuery } from 'stardog/useQuery'\r\n\r\nconst HeatMapPage = () => {\r\n    const [\r\n        runCaseNumbersQuery,\r\n        { loading, error, data },\r\n    ] = useQuery<CaseNumbersDataKey>()\r\n\r\n    const [positions, setPositions] = useState<Position[]>([])\r\n\r\n    const defaultCenter: Coords = {\r\n        lat: 39.8283,\r\n        lng: -98.5795,\r\n    }\r\n    const defaultZoom = 5\r\n\r\n    useEffect(() => {\r\n        runCaseNumbersQuery({\r\n            readQuery: caseNumbersQuery,\r\n        })\r\n    }, [runCaseNumbersQuery])\r\n\r\n    useEffect(() => {\r\n        if (!data) return\r\n\r\n        const computedPositions = data.map((currentDataProp, idx) => {\r\n            const currentKeys = Object.keys(\r\n                currentDataProp\r\n            ) as CaseNumbersDataKey[]\r\n\r\n            const position = currentKeys\r\n                .filter((currentKey) =>\r\n                    ['lat', 'lng', 'percentCases'].includes(currentKey)\r\n                )\r\n                .reduce((accumObj: any, currentKey) => {\r\n                    if (currentKey === 'percentCases') {\r\n                        accumObj.weight = Number(\r\n                            currentDataProp[currentKey].value\r\n                        )\r\n                    } else {\r\n                        accumObj[currentKey] = Number(\r\n                            currentDataProp[currentKey].value\r\n                        )\r\n                    }\r\n                    return accumObj\r\n                }, {}) as Position\r\n\r\n            return position\r\n        })\r\n        setPositions(computedPositions)\r\n    }, [data])\r\n\r\n    if (loading) return <div>Loading...</div>\r\n    if (error) return <div>Error getting data...</div>\r\n\r\n    return (\r\n        <div style={{ height: '100vh', width: '100%' }}>\r\n            <GoogleMapReact\r\n                bootstrapURLKeys={{\r\n                    key: envConfig.googleApiKey ?? '',\r\n                    libraries: ['visualization'],\r\n                }}\r\n                defaultCenter={defaultCenter}\r\n                defaultZoom={defaultZoom}\r\n                heatmap={{\r\n                    positions,\r\n                    options: {\r\n                        opacity: 0.6,\r\n                        radius: 50,\r\n                    },\r\n                }}\r\n            ></GoogleMapReact>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HeatMapPage\r\n","import { Typography } from '@material-ui/core'\r\nimport { ColDef, DataGrid, RowsProp } from '@material-ui/data-grid'\r\n\r\nexport type CaseNumbersDataKey =\r\n    | 'cases'\r\n    | 'countyName'\r\n    | 'percentCases'\r\n    | 'population'\r\n    | 'lat'\r\n    | 'lng'\r\n\r\nexport type RowPropType = 'id' | CaseNumbersDataKey\r\n\r\nexport interface CaseNumbersTableProps {\r\n    rows: RowsProp\r\n    columns: ColDef[]\r\n}\r\n\r\nconst CaseNumbersTable = ({ rows, columns }: CaseNumbersTableProps) => {\r\n    return (\r\n        <>\r\n            <Typography component=\"h2\">\r\n                COVID19 Counties With Most Cases\r\n            </Typography>\r\n            <div style={{ width: 1010, height: 600 }}>\r\n                <DataGrid rows={rows} columns={columns} />\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default CaseNumbersTable\r\n","import Link from '@material-ui/core/Link'\r\nimport { ColDef, RowsProp } from '@material-ui/data-grid'\r\nimport { caseNumbersQuery } from 'queries/caseNumbersQuery'\r\nimport { FC, useEffect, useMemo, useState } from 'react'\r\nimport { Link as RouterLink } from 'react-router-dom'\r\nimport { useQuery } from 'stardog/useQuery'\r\nimport CaseNumbersTable, {\r\n    CaseNumbersDataKey,\r\n    RowPropType,\r\n} from './components/CaseNumbersTable'\r\n\r\nconst HomePage: FC = () => {\r\n    const [\r\n        runCaseNumbersQuery,\r\n        { loading, error, data },\r\n    ] = useQuery<CaseNumbersDataKey>()\r\n\r\n    const columns = useMemo(\r\n        (): ColDef[] => [\r\n            {\r\n                field: 'countyName' as CaseNumbersDataKey,\r\n                headerName: 'County Name',\r\n                width: 250,\r\n            },\r\n            {\r\n                field: 'percentCases' as CaseNumbersDataKey,\r\n                headerName: 'Percent Cases',\r\n                width: 150,\r\n            },\r\n            {\r\n                field: 'population' as CaseNumbersDataKey,\r\n                headerName: 'Population',\r\n                width: 150,\r\n            },\r\n            {\r\n                field: 'cases' as CaseNumbersDataKey,\r\n                headerName: 'Cases',\r\n                width: 150,\r\n            },\r\n            {\r\n                field: 'lat' as CaseNumbersDataKey,\r\n                headerName: 'Latitude',\r\n                width: 150,\r\n            },\r\n            {\r\n                field: 'lng' as CaseNumbersDataKey,\r\n                headerName: 'Longitude',\r\n                width: 150,\r\n            },\r\n        ],\r\n        []\r\n    )\r\n\r\n    const [caseNumbersRows, setCaseNumbersRows] = useState<RowsProp>([])\r\n\r\n    // extract only the values from DataProps\r\n    // and map it back to the CaseNumbersDataKey record.\r\n    useEffect(() => {\r\n        if (!data) return\r\n\r\n        const rows = data.map((currentDataProp, idx) => {\r\n            const currentKeys = Object.keys(\r\n                currentDataProp\r\n            ) as CaseNumbersDataKey[]\r\n            const updatedObj = currentKeys.reduce(\r\n                (accumObj: Record<RowPropType, string>, currentKey) => {\r\n                    accumObj[currentKey] = currentDataProp[currentKey].value\r\n                    return accumObj\r\n                },\r\n                {} as Record<RowPropType, string>\r\n            )\r\n\r\n            updatedObj.id = idx.toString()\r\n\r\n            return updatedObj\r\n        })\r\n\r\n        setCaseNumbersRows(rows)\r\n    }, [data])\r\n\r\n    useEffect(() => {\r\n        runCaseNumbersQuery({\r\n            readQuery: caseNumbersQuery,\r\n        })\r\n    }, [runCaseNumbersQuery])\r\n\r\n    if (loading) return <div>Loading...</div>\r\n    if (error) return <div>Error getting data...</div>\r\n\r\n    return (\r\n        <>\r\n            <CaseNumbersTable rows={caseNumbersRows} columns={columns} />\r\n            <Link component={RouterLink} to=\"/heatmap\">\r\n                Heatmap\r\n            </Link>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default HomePage\r\n","import Layout from 'components/Layout'\r\nimport { generateRoutes, RouteType } from 'helpers/routeHelpers'\r\nimport HeatMapPage from 'pages/HeatmapPage'\r\nimport HomePage from 'pages/HomePage'\r\n\r\nexport const mainRoutes: RouteType[] = [\r\n    {\r\n        path: '/heatmap',\r\n        exact: true,\r\n        childComponent: () => <HeatMapPage />,\r\n    },\r\n    {\r\n        path: ['/', '/home'],\r\n        exact: true,\r\n        childComponent: () => (\r\n            <Layout>\r\n                <HomePage />\r\n            </Layout>\r\n        ),\r\n    },\r\n]\r\n\r\nexport const mainRouting = generateRoutes(mainRoutes)\r\n","import React from 'react'\r\n\r\nconst NotFoundPage = () => {\r\n    return <div>Oops! 404.</div>\r\n}\r\n\r\nexport default NotFoundPage\r\n","import { mainRouting } from 'mainRouting'\nimport NotFoundPage from 'pages/NotFoundPage'\nimport React from 'react'\nimport { Route, Switch } from 'react-router-dom'\n\nconst App = () => {\n    return (\n        <Switch>\n            {mainRouting().map(({ ChildComponent, computedPath, ...rest }) => (\n                <Route path={computedPath} {...rest}>\n                    <ChildComponent />\n                </Route>\n            ))}\n            <Route>\n                <NotFoundPage />\n            </Route>\n        </Switch>\n    )\n}\n\nexport default App\n","import { createMuiTheme, responsiveFontSizes } from '@material-ui/core/styles'\r\n\r\nexport const baseThemeOverride = responsiveFontSizes(\r\n    createMuiTheme({\r\n        typography: {\r\n            button: {\r\n                textTransform: 'unset',\r\n            },\r\n        },\r\n    })\r\n)\r\n","import React from 'react'\r\n\r\nconst ForbiddenPage = () => {\r\n    return <div>You are forbidden!</div>\r\n}\r\n\r\nexport default ForbiddenPage\r\n","import React, { FC } from 'react'\r\nimport { useLocation } from 'react-router-dom'\r\nimport ForbiddenPage from '../pages/ForbiddenPage'\r\nimport NotFoundPage from '../pages/NotFoundPage'\r\n\r\nconst RouterConfig: FC = ({ children }) => {\r\n    const location = useLocation()\r\n\r\n    if ((location?.state as any)?.notFound) {\r\n        return <NotFoundPage />\r\n    }\r\n\r\n    if ((location?.state as any)?.forbidden) {\r\n        return <ForbiddenPage />\r\n    }\r\n\r\n    return <>{children}</>\r\n}\r\n\r\nexport default RouterConfig\r\n","import CssBaseline from '@material-ui/core/CssBaseline'\r\nimport { ThemeProvider } from '@material-ui/core/styles'\r\nimport React, { FC } from 'react'\r\nimport { BrowserRouter as Router } from 'react-router-dom'\r\nimport { StardogProvider } from 'stardog/StardogContext'\r\nimport { baseThemeOverride } from './baseThemeOverride'\r\nimport RouterConfig from './RouterConfig'\r\n\r\nconst AppConfig: FC = ({ children }) => {\r\n    return (\r\n        <StardogProvider\r\n            dbName=\"covid19nyt\"\r\n            username=\"anonymous\"\r\n            password=\"anonymous\"\r\n            endpoint=\"https://express.stardog.cloud:5820\"\r\n        >\r\n            <Router>\r\n                <RouterConfig>\r\n                    <CssBaseline />\r\n                    <ThemeProvider theme={baseThemeOverride}>\r\n                        {children}\r\n                    </ThemeProvider>\r\n                </RouterConfig>\r\n            </Router>\r\n        </StardogProvider>\r\n    )\r\n}\r\n\r\nexport default AppConfig\r\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport AppConfig from './configuration/AppConfig'\n\nReactDOM.render(\n    <React.StrictMode>\n        <AppConfig>\n            <App />\n        </AppConfig>\n    </React.StrictMode>,\n    document.getElementById('root')\n)\n"],"sourceRoot":""}